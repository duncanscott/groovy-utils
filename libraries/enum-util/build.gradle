plugins {
    id 'groovy'
    id 'java-library'
    id 'maven-publish'
    id 'idea'
    id "com.jfrog.artifactory" version "latest.release"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.codehaus.groovy', name: 'groovy-all', version: groovyVersion

    implementation group: 'org.slf4j', name: 'slf4j-api', version: sl4jVersion

    testRuntimeOnly group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    testRuntimeOnly group: 'ch.qos.logback', name: 'logback-core', version: logbackVersion
}

testing {
    suites {
        test {
            useSpock('2.2-groovy-3.0')
        }
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Enum Util', 'Implementation-Version': project.version
    }
}

tasks.withType(Test) { testTask ->
    beforeTest { TestDescriptor descriptor->
        logger.warn "RUNNING ${testTask.name}: ${descriptor.className} \"${descriptor.name}\""
    }
    afterTest { TestDescriptor descriptor, TestResult result ->
        long duration = result.endTime - result.startTime
        String logMessage = "${result.resultType} (${duration} msecs): ${testTask.name} ${descriptor.className} \"${descriptor.name}\""
        switch (result.resultType) {
            case TestResult.ResultType.SUCCESS:
                logger.warn "${logMessage}"
                break;
            case TestResult.ResultType.FAILURE:
                logger.error "${logMessage}"
                break;
            case TestResult.ResultType.SKIPPED:
                logger.warn "${logMessage}"
                break;
            default:
                logger.warn "${logMessage}"
        }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allGroovy
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            //artifact javadocJar
            groupId 'org.duncanscott'
            artifactId project.name
            version version
        }
    }
}

artifactory {
    contextUrl = System.getenv('ARTIFACTORY_CONTEXT_URL')
    publish {
        repository {
            repoKey = it.version.endsWith('SNAPSHOT') ? 'libs-snapshot-local' : 'libs-release-local'
            username = System.getenv('ARTIFACTORY_USER')
            password =System.getenv('ARTIFACTORY_PASSWORD')
            maven = true
        }
        defaults {
            publications ('MyPublication')
            publishPom = false
        }
    }
}